#version 330
#extension GL_ARB_shading_language_420pack : require
#extension GL_ARB_explicit_uniform_location : require

uniform float smoothTimestep;
uniform float vpWidth;
uniform float vpHeight;
uniform sampler2D depthMap;

uniform mat4 view;
uniform vec2 blurDir;

in vec2 fragTexCoord;
layout(location=0) out float fragColor;

/*
float gaussianScale = 1.0;
float gaussian[] = {0.000000,	0.000001,	0.000005,	0.000014,	0.000032,	0.000059,	0.000085,	0.000097,	0.000085,	0.000059,	0.000032,	0.000014,	0.000005,	0.000001,	0.000000,
                    0.000001,	0.000006,	0.000022,	0.000067,	0.000158,	0.000291,	0.000420,	0.000474,	0.000420,	0.000291,	0.000158,	0.000067,	0.000022,	0.000006,	0.000001,
                    0.000005,	0.000022,	0.000085,	0.000257,	0.000607,	0.001119,	0.001615,	0.001826,	0.001615,	0.001119,	0.000607,	0.000257,	0.000085,	0.000022,	0.000005,
                    0.000014,	0.000067,	0.000257,	0.000775,	0.001826,	0.003369,	0.004864,	0.005497,	0.004864,	0.003369,	0.001826,	0.000775,	0.000257,	0.000067,	0.000014,
                    0.000032,	0.000158,	0.000607,	0.001826,	0.004304,	0.007938,	0.011460,	0.012953,	0.011460,	0.007938,	0.004304,	0.001826,	0.000607,	0.000158,	0.000032,
                    0.000059,	0.000291,	0.001119,	0.003369,	0.007938,	0.014641,	0.021138,	0.023891,	0.021138,	0.014641,	0.007938,	0.003369,	0.001119,	0.000291,	0.000059,
                    0.000085,	0.000420,	0.001615,	0.004864,	0.011460,	0.021138,	0.030519,	0.034494,	0.030519,	0.021138,	0.011460,	0.004864,	0.001615,	0.000420,	0.000085,
                    0.000097,	0.000474,	0.001826,	0.005497,	0.012953,	0.023891,	0.034494,	0.038986,	0.034494,	0.023891,	0.012953,	0.005497,	0.001826,	0.000474,	0.000097,
                    0.000085,	0.000420,	0.001615,	0.004864,	0.011460,	0.021138,	0.030519,	0.034494,	0.030519,	0.021138,	0.011460,	0.004864,	0.001615,	0.000420,	0.000085,
                    0.000059,	0.000291,	0.001119,	0.003369,	0.007938,	0.014641,	0.021138,	0.023891,	0.021138,	0.014641,	0.007938,	0.003369,	0.001119,	0.000291,	0.000059,
                    0.000032,	0.000158,	0.000607,	0.001826,	0.004304,	0.007938,	0.011460,	0.012953,	0.011460,	0.007938,	0.004304,	0.001826,	0.000607,	0.000158,	0.000032,
                    0.000014,	0.000067,	0.000257,	0.000775,	0.001826,	0.003369,	0.004864,	0.005497,	0.004864,	0.003369,	0.001826,	0.000775,	0.000257,	0.000067,	0.000014,
                    0.000005,	0.000022,	0.000085,	0.000257,	0.000607,	0.001119,	0.001615,	0.001826,	0.001615,	0.001119,	0.000607,	0.000257,	0.000085,	0.000022,	0.000005,
                    0.000001,	0.000006,	0.000022,	0.000067,	0.000158,	0.000291,	0.000420,	0.000474,	0.000420,	0.000291,	0.000158,	0.000067,	0.000022,	0.000006,	0.000001,
                    0.000000,	0.000001,	0.000005,	0.000014,	0.000032,	0.000059,	0.000085,	0.000097,	0.000085,	0.000059,	0.000032,	0.000014,	0.000005,	0.000001,	0.000000};
*/

float gaussianScale = 1.0;
float gaussian[] = {0.27901,0.44198,0.27901};

/*
float gaussianScale = 1.0;
float gaussian[] = {0.000489,0.002403,0.009246,0.027840,0.065602,0.120999,0.174697,0.197448,0.174697,0.120999,0.065602,0.027840,0.009246,0.002403,0.000489};
*/
/*
float gaussianScale = 1.0;
float gaussian[] = {0.000003,0.000006,0.000012,0.000023,0.000044,0.000081,0.000147,0.00026,0.000446,0.000745,0.001211,0.001913,0.002939,0.004393,0.006386,0.00903,0.012419,0.016614,0.021618,0.02736,0.033681,0.040329,0.046969,0.053207,0.058627,0.062833,0.0655,0.066414,0.0655,0.062833,0.058627,0.053207,0.046969,0.040329,0.033681,0.02736,0.021618,0.016614,0.012419,0.00903,0.006386,0.004393,0.002939,0.001913,0.001211,0.000745,0.000446,0.00026,0.000147,0.000081,0.000044,0.000023,0.000012,0.000006,0.000003};
*/

/*
float gaussianScale = 1.0;

float gaussian[] = { 0.000000,	0.000001,	0.000014,	0.000055,	0.000088,	0.000055,	0.000014,	0.000001,	0.000000,
                     0.000001,	0.000036,	0.000362,	0.001445,	0.002289,	0.001445,	0.000362,	0.000036,	0.000001,
                     0.000014,	0.000362,	0.003672,	0.014648,	0.023205,	0.014648,	0.003672,	0.000362,	0.000014,
                     0.000055,	0.001445,	0.014648,	0.058434,	0.092566,	0.058434,	0.014648,	0.001445,	0.000055,
                     0.000088,	0.002289,	0.023205,	0.092566,	0.146634,	0.092566,	0.023205,	0.002289,	0.000088,
                     0.000055,	0.001445,	0.014648,	0.058434,	0.092566,	0.058434,	0.014648,	0.001445,	0.000055,
                     0.000014,	0.000362,	0.003672,	0.014648,	0.023205,	0.014648,	0.003672,	0.000362,	0.000014,
                     0.000001,	0.000036,	0.000362,	0.001445,	0.002289,	0.001445,	0.000362,	0.000036,	0.000001,
                     0.000000,	0.000001,	0.000014,	0.000055,	0.000088,	0.000055,	0.000014,	0.000001,	0.000000};
*/

/*float gaussianScale = 1.0/16.0;

float gaussian[] = {1,2,1,
                    2,4,2,
                    1,2,1};
*/
float convolve(vec2 fragPos,vec2 dxTex)
{
    float sum = 0.0;
    //for(int x=-1;x<=1;x++)
    for(int x=-1;x<=1;x++)
    {
        float samp = texture(depthMap,fragPos+vec2(x*blurDir*dxTex),0).x;
        sum += samp;
    }
    //return 10.0;
    return (gaussianScale*sum)/(3);
}

void main()
{
    vec2 dxTex = vec2(1.0,1.0)/textureSize(depthMap,0);
    float val = convolve(fragTexCoord,dxTex);
    fragColor = val;
}
